<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>benQ 一个爱折腾的人</title>
  <subtitle>es6 react JavaScript</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bengirl.github.io/"/>
  <updated>2017-02-23T18:07:50.000Z</updated>
  <id>https://bengirl.github.io/</id>
  
  <author>
    <name>benQ</name>
    <email>240018677@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webstorm-shortcu-key</title>
    <link href="https://bengirl.github.io/2017/02/24/webstorm-shortcu-key/"/>
    <id>https://bengirl.github.io/2017/02/24/webstorm-shortcu-key/</id>
    <published>2017-02-23T18:02:20.000Z</published>
    <updated>2017-02-23T18:07:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>###webstorm快捷键大全</p>
<blockquote>
<p>webstorm应该是目前最强的js编辑器了，结合sublime text可以很效率的开发项目。</p>
</blockquote>
<p>今天整理了一些webstorm比较实用的快捷键：<br>| 快捷键     |   描述    |<br>| :——– | ——–:|<br>| Ctrl+/ 或 Ctrl+Shift+/  | 注释（// 或者/<em>…</em>/ ） |<br>| Shift+F6     |   重构-重命名 |<br>| Ctrl+X      |    剪切一行 |<br>| Ctrl+Y      |    删除一行 |<br>| Ctrl+D      |    复制行 |<br>| Ctrl+G      |    查找行 |<br>| Ctrl+Shift+Up/Down| 代码向上/下移动 |<br>| F2 或Shift+F2 | 高亮错误或警告快速定位 |<br>| 写代码，按Tab      | 生成代码 |<br>| Ctrl+B或Ctrl+鼠标左键单击|快速打开光标处的类或方法（常用功能） |<br>| Ctrl + Alt + B |  跳转方法实现处|<br>| Alt + Up/Down | 跳转到上一个/下一个方法 |<br>| Ctrl+E      | 最近打开的文件|<br>| Alt+F1     |查找代码所在位置|<br>| Ctrl+Alt+L |  格式化代码 |<br>| Ctrl+R |  替换文本 |<br>| Ctrl+F |  查找文本 |<br>| Ctrl+P |  方法参数提示 |<br>| F3 |  查找下一个 |<br>| Shift+F3 |  查找上一个 |<br>| alt+Shift+F |  将当前文件加入收藏夹 |<br>| ctrl+alt+s | 打开配置窗口 |<br>| ctrl+Shift+N |通过文件名快速查找工程内的文件（必记）|<br>|ctrl+Shift+alt+N | 通过一个字符快速查找位置（必记）|<br>|Shift+enter |重新开始一行（无论光标在哪个位置）|<br>| Ctrl + Delete |  删除文字结束|<br>|Ctrl + Backspace| 删除文字开始|<br>| Ctrl + Shift + F12 | 切换最大化编辑器|</p>
<blockquote>
<p>个人而言用的非常平凡快捷键如下：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Ctrl+/  </div><div class="line">Ctrl+Shift+/ </div><div class="line">Ctrl+X</div><div class="line">Ctrl+Y</div><div class="line">Ctrl+D</div><div class="line">Ctrl+F</div><div class="line">Ctrl+B</div><div class="line">Ctrl+鼠标左键单击</div><div class="line">Ctrl+Alt+L</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###webstorm快捷键大全&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;webstorm应该是目前最强的js编辑器了，结合sublime text可以很效率的开发项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天整理了一些webstorm比较实用的快捷键：&lt;br&gt;| 
    
    </summary>
    
    
      <category term="webstorm" scheme="https://bengirl.github.io/tags/webstorm/"/>
    
  </entry>
  
  <entry>
    <title>es6-summary</title>
    <link href="https://bengirl.github.io/2017/02/24/es6-summary/"/>
    <id>https://bengirl.github.io/2017/02/24/es6-summary/</id>
    <published>2017-02-23T17:33:21.000Z</published>
    <updated>2017-02-23T17:38:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="es6-归纳总结"><a href="#es6-归纳总结" class="headerlink" title="es6 归纳总结"></a>es6 归纳总结</h3><p>1、ES6一共有6种声明变量的方法：</p>
<blockquote>
<p>var命令和function命令，let和const命令，import命令和class命令</p>
</blockquote>
<p>2、遍历Map结构</p>
<blockquote>
<p>配合变量的解构赋值，获取键名和键值就非常方便。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var map = new Map(); </div><div class="line">map.set(&apos;first&apos;, &apos;hello&apos;); </div><div class="line">map.set(&apos;second&apos;, &apos;world&apos;); </div><div class="line">for (let [key, value] of map)&#123;  </div><div class="line"> console.log(key + &quot; is &quot; + value); </div><div class="line">&#125; </div><div class="line"> // first is hello </div><div class="line"> // second is world</div></pre></td></tr></table></figure></p>
<p>如果只想获取键名，或者只想获取键值，可以写成下面这样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 获取键名</div><div class="line">for (let [key] of map) &#123; // … &#125;</div><div class="line">// 获取键值</div><div class="line">for (let [,value] of map) &#123;   // ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>3、数组与对象的解构赋值区别</p>
<blockquote>
<p>数组的元素是按次序排列的，变量的取值由它的位置决定；而对象的属性没有次序，变量必须与属性同名，才能取到正确的值。对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">let &#123; bar, foo &#125; = &#123; foo: &quot;aaa&quot;, bar: &quot;bbb&quot; &#125;; </div><div class="line">foo // &quot;aaa&quot; </div><div class="line">bar // &quot;bbb&quot; </div><div class="line">let &#123; baz &#125; = &#123; foo: &quot;aaa&quot;, bar: &quot;bbb&quot; &#125;; </div><div class="line">baz // undefined</div></pre></td></tr></table></figure></p>
<p>解构赋值的规则是，只要等号右边的值不是对象，就先将其转为对象。由于undefined和null无法转为对象，所以对它们进行解构赋值，都会报错。</p>
</blockquote>
<p>4、for-of循环</p>
<blockquote>
<p>这是目前遍历数组最简洁和直接的语法；<br> 它避免了for-in的所有缺陷；<br>与forEach()不一样，它支持break，continue和return。<br>for-in循环用于遍历对象属性。<br>for-of循环用于遍历数据——比如数组中单值</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;es6-归纳总结&quot;&gt;&lt;a href=&quot;#es6-归纳总结&quot; class=&quot;headerlink&quot; title=&quot;es6 归纳总结&quot;&gt;&lt;/a&gt;es6 归纳总结&lt;/h3&gt;&lt;p&gt;1、ES6一共有6种声明变量的方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;var命令和f
    
    </summary>
    
    
      <category term="es6" scheme="https://bengirl.github.io/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>es6-configAndInstall</title>
    <link href="https://bengirl.github.io/2017/02/24/es6-configAndInstall/"/>
    <id>https://bengirl.github.io/2017/02/24/es6-configAndInstall/</id>
    <published>2017-02-23T17:19:52.000Z</published>
    <updated>2017-02-23T17:21:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>##es6 环境安装与配置<br>1、首先安装node.js的环境。<br>2、npm安装es6转码规则。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># ES2015转码规则</div><div class="line">$ npm install --save-dev babel-preset-es2015</div><div class="line"># react转码规则</div><div class="line">$ npm install --save-dev babel-preset-react</div><div class="line"># ES7不同阶段语法提案的转码规则（共有4个阶段），选装一个</div><div class="line">$ npm install --save-dev babel-preset-stage-0</div><div class="line">$ npm install --save-dev babel-preset-stage-1</div><div class="line">$ npm install --save-dev babel-preset-stage-2</div><div class="line">$ npm install --save-dev babel-preset-stage-3</div></pre></td></tr></table></figure></p>
<p>3、安装命令行转码babel-cli<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev babel-cli</div><div class="line"># 转码结果输出到标准输出</div><div class="line">$ babel example.js</div><div class="line"># 转码结果写入一个文件</div><div class="line"># --out-file 或 -o 参数指定输出文件</div><div class="line">$ babel example.js --out-file compiled.js</div><div class="line"># 或者</div><div class="line">$ babel example.js -o compiled.js</div><div class="line"># 整个目录转码</div><div class="line"># --out-dir 或 -d 参数指定输出目录</div><div class="line">$ babel src --out-dir lib</div><div class="line"># 或者</div><div class="line">$ babel src -d lib</div><div class="line"># -s 参数生成source map文件</div><div class="line">$ babel src -d lib -s</div></pre></td></tr></table></figure></p>
<p>4、改写或者新加文件 package.json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;description&quot;: &quot;es6 demo&quot;,</div><div class="line">  &quot;author&quot;: &quot;ben&quot;,</div><div class="line">  &quot;license&quot;: &quot;MIT&quot;,</div><div class="line">  &quot;devDependencies&quot;: &#123;</div><div class="line">    &quot;babel-cli&quot;: &quot;^6.22.2&quot;,</div><div class="line">    &quot;babel-preset-es2015&quot;: &quot;^6.22.0&quot;,</div><div class="line">    &quot;babel-preset-react&quot;: &quot;^6.23.0&quot;,</div><div class="line">    &quot;babel-preset-stage-0&quot;: &quot;^6.22.0&quot;,</div><div class="line">    &quot;babel-register&quot;: &quot;^6.23.0&quot;,</div><div class="line">    &quot;es-checker&quot;: &quot;^1.4.0&quot;</div><div class="line">  &#125;,</div><div class="line">  &quot;scripts&quot;: &#123;</div><div class="line">    &quot;build&quot;: &quot;babel src -d lib&quot;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>转码的时候，就执行下面的命令。$ npm run build</p>
</blockquote>
<hr>
<p>5、项目根目录建立一个.babelrc 文件,里面内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;presets&quot;: [</div><div class="line">    &quot;es2015&quot;,</div><div class="line">    &quot;react&quot;,</div><div class="line">    &quot;stage-0&quot;</div><div class="line">  ],</div><div class="line">  &quot;plugins&quot;: []</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>6、babel-node命令可以直接运行ES6脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ babel-node es6.js  </div><div class="line">或者如下：</div><div class="line">$ babel-node</div><div class="line">&gt; (x =&gt; x * 2)(1)</div><div class="line">2</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##es6 环境安装与配置&lt;br&gt;1、首先安装node.js的环境。&lt;br&gt;2、npm安装es6转码规则。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
    
      <category term="es6" scheme="https://bengirl.github.io/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令</title>
    <link href="https://bengirl.github.io/2017/02/19/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://bengirl.github.io/2017/02/19/hexo常用命令/</id>
    <published>2017-02-19T14:31:24.000Z</published>
    <updated>2017-02-19T18:38:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo收集整理了一堆命令"><a href="#hexo收集整理了一堆命令" class="headerlink" title="hexo收集整理了一堆命令"></a>hexo收集整理了一堆命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo  //安装hexo</div><div class="line">$ npm init  //初始化</div><div class="line">$ npm install  // hexo 项目文件下安装依耐</div><div class="line">$ hexo server  //或hexo -s 启动hexo服务</div><div class="line">[info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div><div class="line">$ hexo new &quot;postName&quot; //或者hexo n 新建文章</div><div class="line">hexo new page &quot;pageName&quot; // 新建页面</div><div class="line">$ hexo clean // 每次先删除了在生成</div><div class="line">$ hexo generate //或hexo -g 将 md文件转成静态网页 </div><div class="line">$ hexo deploy  //或hexo -d 发布到github上</div><div class="line">$ hexo help  // 查看帮助</div><div class="line">$ hexo version  // 查看Hexo的版本</div><div class="line">$ hexo deploy -g // 生成加部署</div><div class="line">$ hexo server -g  // 生成加预览</div></pre></td></tr></table></figure>
<h3 id="hexo参考链接"><a href="#hexo参考链接" class="headerlink" title="hexo参考链接"></a>hexo参考链接</h3><p><a href="http://www.jianshu.com/p/e99ed60390a8" target="_blank" rel="external">http://www.jianshu.com/p/e99ed60390a8</a><br><a href="http://www.jianshu.com/p/465830080ea9" target="_blank" rel="external">http://www.jianshu.com/p/465830080ea9</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hexo收集整理了一堆命令&quot;&gt;&lt;a href=&quot;#hexo收集整理了一堆命令&quot; class=&quot;headerlink&quot; title=&quot;hexo收集整理了一堆命令&quot;&gt;&lt;/a&gt;hexo收集整理了一堆命令&lt;/h3&gt;&lt;figure class=&quot;highlight plai
    
    </summary>
    
    
      <category term="hexo" scheme="https://bengirl.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="https://bengirl.github.io/2017/02/17/hello-world/"/>
    <id>https://bengirl.github.io/2017/02/17/hello-world/</id>
    <published>2017-02-17T11:11:51.000Z</published>
    <updated>2017-02-19T18:27:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="hexo" scheme="https://bengirl.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
